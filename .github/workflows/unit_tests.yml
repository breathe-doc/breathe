name: Tests

<<<<<<< HEAD
on:
  push:
    paths:
      - ".github/workflows/unit_tests.yml"
      - "breathe/**"
      - "tests/**"
  pull_request:
    paths:
      - ".github/workflows/unit_tests.yml"
      - "breathe/**"
      - "tests/**"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  PYTHONDEVMODE: "1"  # -X dev
  PYTHONWARNDEFAULTENCODING: "1"  # -X warn_default_encoding

jobs:
  test:
||||||| 542ae9b
=======
on:
  push:
    paths:
      - ".github/workflows/unit_tests.yml"
      - "breathe/**"
      - "tests/**"
  pull_request:
    paths:
      - ".github/workflows/unit_tests.yml"
      - "breathe/**"
      - "tests/**"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  PYTHONDEVMODE: "1"  # -X dev
  PYTHONWARNDEFAULTENCODING: "1"  # -X warn_default_encoding

jobs:
  cache-doxygen:
    uses: ./.github/workflows/cache_doxygen.yml

  test:
    needs: cache-doxygen
>>>>>>> memberdef-in-groups
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
<<<<<<< HEAD
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
||||||| 542ae9b
        python-version: ['3.7', '3.8', '3.9', '3.10']
=======
        doxygen-version:
          - '1.9.4'
          - '1.9.7'
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
>>>>>>> memberdef-in-groups
        sphinx-version:
<<<<<<< HEAD
          - '7.2' # Ubuntu 24.04
          - '7.4' # Ubuntu 24.10
          - '8.1' # Ubuntu 25.04
||||||| 542ae9b
          - '4.0.3'
          - '4.1.2'
          - '4.2.0'
          - '4.3.2'
          - '4.5.0'
          - '5.0.2'
          - '5.1.1'
          - '5.3.0'
          - '6.1.3'
          - git+https://github.com/sphinx-doc/sphinx.git@master
=======
          - '6.2'
          - '7.0'
          - '7.1'
          - '7.2'
          # version 7.3 broke up the domain modules into packages, changing
          # where some classes had to be imported from
          - '7.3'
          - '7.4'
          - '8.0'
          - 'latest'
>>>>>>> memberdef-in-groups
        exclude:
<<<<<<< HEAD
          - python-version: '3.9'
            sphinx-version: '8.0'
          - python-version: '3.9'
            sphinx-version: '8.1'
          - python-version: '3.12'
            sphinx-version: '6.2'
          - python-version: '3.13'
            sphinx-version: '6.2'
||||||| 542ae9b
          # avoid bug in following configurations
          # sphinx/util/typing.py:37: in <module>
          #     from types import Union as types_Union
          # ImportError: cannot import name 'Union' from 'types'
          - python-version: '3.10'
            sphinx-version: '4.0.3'
          - python-version: '3.10'
            sphinx-version: '4.1.2'

          # Sphinx has removed support for Python 3.7, Breathe will follow.
          - python-version: '3.7'
            sphinx-version: git+https://github.com/sphinx-doc/sphinx.git@master
          - python-version: '3.7'
            sphinx-version: '6.1.3'
=======
          - python-version: '3.9'
            sphinx-version: '8.0'
          - python-version: '3.9'
            sphinx-version: 'latest'
>>>>>>> memberdef-in-groups

    steps:
<<<<<<< HEAD
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[test]
    - name: Install Sphinx ${{ matrix.sphinx-version }}
      run: python -m pip install --upgrade "Sphinx~=${{ matrix.sphinx-version }}.0"
    - name: Test with pytest
      run: python -m pytest -vv
      env:
        PYTHONWARNINGS: "error"  # treat all warnings as errors
||||||| 542ae9b
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
=======
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
>>>>>>> memberdef-in-groups

<<<<<<< HEAD
  test-latest-sphinx:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: "3"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[test]
    - name: Install Sphinx master
      run: python -m pip install "Sphinx @ git+https://github.com/sphinx-doc/sphinx"
    - name: Test with pytest
      run: python -m pytest -vv
||||||| 542ae9b
      - name: install sphinx from PyPI or from git
        run: |
          if echo "${{ matrix.sphinx-version }}"|grep -q git; then
              pip install ${{ matrix.sphinx-version }}
          else
              pip install -Iv Sphinx==${{ matrix.sphinx-version }}
          fi

      - name: install dependencies
        run: |
          pip install -r requirements/development.txt

      - name: run the unit tests
        run: make dev-test
=======
      - name: Install Sphinx ${{ matrix.sphinx-version }}
        if: matrix.sphinx-version != 'latest'
        run: |
          python -m pip install -Iv Sphinx==${{ matrix.sphinx-version }}
      
      - name: Install Sphinx master
        if: matrix.sphinx-version == 'latest'
        run: |
          python -m pip install "Sphinx @ git+https://github.com/sphinx-doc/sphinx.git@master"

      - uses: actions/cache/restore@v4
        id: cache-doxygen
        with:
          path: doxygen-bin-arc
          fail-on-cache-miss: true
          key: ${{ runner.os }}-doxygen-${{ matrix.doxygen-version }}

      - name: Install doxygen
        # at some point actions/cache/restore@4 started unpacking doxygen.tar.gz
        # automatically and I don't know why -- Rouslan
        run: |
          cd doxygen-bin-arc
          if test -d doxygen; then
            cd doxygen
          else
            gunzip doxygen.tar.gz
            tar xf doxygen.tar
            cd doxygen-${{ matrix.doxygen-version }}
          fi
          sudo make install

      - name: Install dependencies
        # "--editable" is needed so that _parser.py is placed in the local
        # folder where pytest will import from
        run: |
          pip install --upgrade pip
          pip install --editable .[test]

      - name: Test with pytest
        if: matrix.sphinx-version != 'latest'
        run: python -m pytest -vv
        env:
          PYTHONWARNINGS: "error"  # treat all warnings as errors
        
      - name: Test with pytest
        if: matrix.sphinx-version == 'latest'
        run: python -m pytest -vv
>>>>>>> memberdef-in-groups
