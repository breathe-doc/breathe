<sectiondef kind="typedef">
<memberdef kind="function" id="1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
  <type><ref refid="classat_1_1_tensor" kindref="compound">Tensor</ref></type>
  <definition>Tensor at::Tensor::min_values</definition>
  <argsstring>(IntArrayRef dim, bool keepdim=false) const</argsstring>
  <name>min_values</name>
  <param>
    <type>IntArrayRef</type>
    <declname>dim</declname>
  </param>
  <param>
    <type>bool</type>
    <declname>keepdim</declname>
    <defval>false</defval>
  </param>
  <briefdescription>
  </briefdescription>
  <detaileddescription>
  </detaileddescription>
  <inbodydescription>
  </inbodydescription>
  <location file="TensorBody.h" line="736" column="10"/>
</memberdef>
<memberdef kind="function" id="2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
  <type><ref refid="classat_1_1_tensor" kindref="compound">Tensor</ref></type>
  <definition>Tensor at::Tensor::min_values</definition>
  <argsstring>(DimnameList dim, bool keepdim=false) const</argsstring>
  <name>min_values</name>
  <param>
    <type>DimnameList</type>
    <declname>dim</declname>
  </param>
  <param>
    <type>bool</type>
    <declname>keepdim</declname>
    <defval>false</defval>
  </param>
  <briefdescription>
  </briefdescription>
  <detaileddescription>
  </detaileddescription>
  <inbodydescription>
  </inbodydescription>
  <location file="TensorBody.h" line="738" column="10"/>
</memberdef>
<memberdef kind="function" id="3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
  <type><ref refid="classat_1_1_tensor" kindref="compound">Tensor</ref></type>
  <definition>Tensor at::min_values</definition>
  <argsstring>(const Tensor &amp;self, IntArrayRef dim, bool keepdim=false)</argsstring>
  <name>min_values</name>
  <param>
    <type>const <ref refid="classat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
    <declname>self</declname>
  </param>
  <param>
    <type>IntArrayRef</type>
    <declname>dim</declname>
  </param>
  <param>
    <type>bool</type>
    <declname>keepdim</declname>
    <defval>false</defval>
  </param>
  <briefdescription>
  </briefdescription>
  <detaileddescription>
  </detaileddescription>
  <inbodydescription>
  </inbodydescription>
  <location file="Functions.h" line="441" column="15" declfile="Functions.h" declline="441" declcolumn="15"/>
</memberdef>
<memberdef kind="function" id="4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
  <type><ref refid="classat_1_1_tensor" kindref="compound">Tensor</ref></type>
  <definition>Tensor at::min_values</definition>
  <argsstring>(const Tensor &amp;self, DimnameList dim, bool keepdim=false)</argsstring>
  <name>min_values</name>
  <param>
    <type>const <ref refid="classat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
    <declname>self</declname>
  </param>
  <param>
    <type>DimnameList</type>
    <declname>dim</declname>
  </param>
  <param>
    <type>bool</type>
    <declname>keepdim</declname>
    <defval>false</defval>
  </param>
  <briefdescription>
  </briefdescription>
  <detaileddescription>
  </detaileddescription>
  <inbodydescription>
  </inbodydescription>
  <location file="Functions.h" line="444" column="15" declfile="Functions.h" declline="444" declcolumn="15"/>
</memberdef>
</sectiondef>

