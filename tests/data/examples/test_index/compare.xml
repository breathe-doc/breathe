<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../../docutils.css"?>
<document>
    <index entries="['single',\ 'E\ (C++\ struct)',\ '_CPPv41E',\ '',\ None]"></index>
    <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_e"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">E</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="public-attrib">
                <rubric classes="breathe-sectiondef-title">Public Members</rubric>
                <index entries="['single',\ 'E::F\ (C++\ member)',\ '_CPPv4N1E1FE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_e_1ad7609b176cbaad69a2437f645ffc8565"></target><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">F</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <index entries="['single',\ 'G::J\ (C++\ class)',\ '_CPPv4I0EN1G1JE',\ '',\ None]"></index>
    <desc classes="cpp class" desctype="class" domain="cpp" objtype="class">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="class_g_1_1_j"></target><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">J</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="public-attrib">
                <rubric classes="breathe-sectiondef-title">Public Members</rubric>
                <index entries="['single',\ 'G::J::K\ (C++\ member)',\ '_CPPv4N1G1J1KE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="class_g_1_1_j_1aeadc30bb7b5e8e6def1a8f929ad65b31"></target><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J::T"><desc_sig_name classes="n">T</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">K</desc_sig_name></desc_name><desc_sig_punctuation classes="p">[</desc_sig_punctuation><reference internal="True" refid="_CPPv4N1G1HE" reftitle="G::H"><desc_sig_name classes="n">H</desc_sig_name></reference><desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="friend">
                <rubric classes="breathe-sectiondef-title">Friends</rubric>
                <index entries="['single',\ 'G::J::operator==\ (C++\ function)',\ '_CPPv4N1G1JeqE1J1J',\ '',\ None]"></index>
                <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="class_g_1_1_j_1a8f17a23a7548fe664adb9010dcaf0f1a"></target><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">inline</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">friend</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">bool</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_keyword classes="k">operator</desc_sig_keyword><desc_sig_operator classes="o">==</desc_sig_operator></desc_name><desc_parameterlist><desc_parameter noemph="True"><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J"><desc_sig_name classes="n">J</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">ja</desc_sig_name></desc_parameter><desc_parameter noemph="True"><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J"><desc_sig_name classes="n">J</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">jb</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <index entries="['single',\ 'G::L\ (C++\ struct)',\ '_CPPv4I0EN1G1LE',\ '',\ None]"></index>
    <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="struct_g_1_1_l"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">L</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="public-static-attrib">
                <rubric classes="breathe-sectiondef-title">Public Static Attributes</rubric>
                <index entries="['single',\ 'G::L::M\ (C++\ member)',\ '_CPPv4N1G1L1ME',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_g_1_1_l_1a702e62504d94cb9b822edaf918a406d7"></target><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">constexpr</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">bool</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">M</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">false</desc_sig_keyword></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <index entries="['single',\ 'G::L&lt;J&lt;T&gt;&gt;\ (C++\ struct)',\ '_CPPv4I0EN1G1LI1JI1TEEE',\ '',\ None]"></index>
    <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="struct_g_1_1_l_3_01_j_3_01_t_01_4_01_4"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">L</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J"><desc_sig_name classes="n">J</desc_sig_name></reference><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><reference internal="True" refid="_CPPv4I0EN1G1LI1JI1TEEE" reftitle="G::L&lt;J&lt;T&gt;&gt;::T"><desc_sig_name classes="n">T</desc_sig_name></reference><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="public-static-attrib">
                <rubric classes="breathe-sectiondef-title">Public Static Attributes</rubric>
                <index entries="['single',\ 'G::L&lt;J&lt;T&gt;&gt;::M\ (C++\ member)',\ '_CPPv4N1G1LI1JI1TEE1ME',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_g_1_1_l_3_01_j_3_01_t_01_4_01_4_1a5bf108c1850d859adfd1131295d80cd9"></target><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">constexpr</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">bool</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">M</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">true</desc_sig_keyword></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <index entries="['single',\ 'G::N\ (C++\ concept)',\ '_CPPv4I0EN1G1NE',\ '',\ None]"></index>
    <desc classes="cpp concept" desctype="concept" domain="cpp" objtype="concept">
        <desc_signature classes="sig sig-object cpp"><target></target><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><desc_sig_keyword classes="k">concept</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">N</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
        </desc_content>
    </desc>
    <index entries="['single',\ 'G\ (C++\ type)',\ '_CPPv41G',\ '',\ None]"></index>
    <desc classes="cpp type" desctype="type" domain="cpp" objtype="type">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="namespace_g"></target><desc_sig_keyword classes="k">namespace</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">G</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="typedef">
                <rubric classes="breathe-sectiondef-title">Typedefs</rubric>
                <index entries="['single',\ 'G::O\ (C++\ type)',\ '_CPPv4N1G1OE',\ '',\ None]"></index>
                <desc classes="cpp type" desctype="type" domain="cpp" objtype="type">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a5cc6a8b3f2ac49e5ea1d796d7b8deb88"></target><desc_sig_keyword classes="k">typedef</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">(</desc_sig_punctuation><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_name classes="sig-name descname"><desc_sig_name classes="n">O</desc_sig_name></desc_name><desc_sig_punctuation classes="p">)</desc_sig_punctuation><desc_sig_punctuation classes="p">(</desc_sig_punctuation><reference internal="True" refid="_CPPv41B" reftitle="B"><desc_sig_name classes="n">B</desc_sig_name></reference><desc_sig_punctuation classes="p">)</desc_sig_punctuation></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="var">
                <rubric classes="breathe-sectiondef-title">Variables</rubric>
                <index entries="['single',\ 'G::H\ (C++\ member)',\ '_CPPv4N1G1HE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a63c878d1cd47bc0b8a2fd42194ca61cb"></target><desc_sig_keyword classes="k">constexpr</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">unsigned</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">H</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_literal_number classes="m">12</desc_sig_literal_number></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'G::I\ (C++\ member)',\ '_CPPv4N1G1IE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a392dac17f32ad4e3afd2a98a40ad2d5e"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">I</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <desc domain="cpp" objtype="file">
        <desc_signature classes="sig sig-object cpp"><target></target><emphasis>file</emphasis> <desc_name classes="sig-name descname">index.h</desc_name></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="define">
                <rubric classes="breathe-sectiondef-title">Defines</rubric>
                <index entries="['single',\ 'P\ (C\ macro)',\ 'c.P',\ '',\ None]"></index>
                <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a2748566f4c443ee77aa831e63dbb5ebe"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">P</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="typedef">
                <rubric classes="breathe-sectiondef-title">Typedefs</rubric>
                <index entries="['single',\ 'B\ (C++\ type)',\ '_CPPv41B',\ '',\ None]"></index>
                <desc classes="cpp type" desctype="type" domain="cpp" objtype="type">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a4d6d18e0fd552272b99d61d253c19485"></target><desc_sig_keyword classes="k">using</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">B</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">long</desc_sig_keyword_type></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="enum">
                <rubric classes="breathe-sectiondef-title">Enums</rubric>
                <index entries="['single',\ 'Q\ (C++\ enum)',\ '_CPPv41Q',\ '',\ None]"></index>
                <desc classes="cpp enum" desctype="enum" domain="cpp" objtype="enum">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a7e56035a736d269ad670f312496a0846"></target><desc_sig_keyword classes="k">enum</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">Q</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                        <paragraph><emphasis>Values:</emphasis></paragraph>
                        <index entries="['single',\ 'Q::R\ (C++\ enumerator)',\ '_CPPv4N1Q1RE',\ '',\ None]"></index>
                        <desc classes="cpp enumerator" desctype="enumerator" domain="cpp" objtype="enumerator">
                            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a7e56035a736d269ad670f312496a0846a1784b1a3d7cbd43c45ff82c72d05e4ae"></target><desc_sig_keyword classes="k">enumerator</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">R</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Q::S\ (C++\ enumerator)',\ '_CPPv4N1Q1SE',\ '',\ None]"></index>
                        <desc classes="cpp enumerator" desctype="enumerator" domain="cpp" objtype="enumerator">
                            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a7e56035a736d269ad670f312496a0846af1ce01387d2348f8b858721a7db81670"></target><desc_sig_keyword classes="k">enumerator</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">S</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="func">
                <rubric classes="breathe-sectiondef-title">Functions</rubric>
                <index entries="['single',\ 'C\ (C++\ function)',\ '_CPPv41CDa',\ '',\ None]"></index>
                <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a4e9dca803644b229950625e5415230ac"></target><desc_sig_keyword_type classes="kt">auto</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">C</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">auto</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">x</desc_sig_name></desc_parameter></desc_parameterlist><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">-&gt;</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv41A" reftitle="A"><desc_sig_name classes="n">A</desc_sig_name></reference></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'D\ (C++\ function)',\ '_CPPv4I0E1Dvv',\ '',\ None]"></index>
                <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="index_8h_1a487bfd0fa592fa6a6541fa6563b4eed8"></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">D</desc_sig_name></desc_name><desc_parameterlist></desc_parameterlist></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="var">
                <rubric classes="breathe-sectiondef-title">Variables</rubric>
                <index entries="['single',\ 'A\ (C++\ member)',\ '_CPPv41A',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a56a52f73797a8d06045cf5bc1ab831bf"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">A</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <container classes="breathe-sectiondef" objtype="define">
        <rubric classes="breathe-sectiondef-title">Defines</rubric>
        <index entries="['single',\ 'P\ (C\ macro)',\ 'c.P',\ '',\ None]"></index>
        <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a2748566f4c443ee77aa831e63dbb5ebe"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">P</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </container>
    <container classes="breathe-sectiondef" objtype="typedef">
        <rubric classes="breathe-sectiondef-title">Typedefs</rubric>
        <index entries="['single',\ 'B\ (C++\ type)',\ '_CPPv41B',\ '',\ None]"></index>
        <desc classes="cpp type" desctype="type" domain="cpp" objtype="type">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a4d6d18e0fd552272b99d61d253c19485"></target><desc_sig_keyword classes="k">using</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">B</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">long</desc_sig_keyword_type></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </container>
    <container classes="breathe-sectiondef" objtype="enum">
        <rubric classes="breathe-sectiondef-title">Enums</rubric>
        <index entries="['single',\ 'Q\ (C++\ enum)',\ '_CPPv41Q',\ '',\ None]"></index>
        <desc classes="cpp enum" desctype="enum" domain="cpp" objtype="enum">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a7e56035a736d269ad670f312496a0846"></target><desc_sig_keyword classes="k">enum</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">Q</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph><emphasis>Values:</emphasis></paragraph>
                <index entries="['single',\ 'Q::R\ (C++\ enumerator)',\ '_CPPv4N1Q1RE',\ '',\ None]"></index>
                <desc classes="cpp enumerator" desctype="enumerator" domain="cpp" objtype="enumerator">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a7e56035a736d269ad670f312496a0846a1784b1a3d7cbd43c45ff82c72d05e4ae"></target><desc_sig_keyword classes="k">enumerator</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">R</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'Q::S\ (C++\ enumerator)',\ '_CPPv4N1Q1SE',\ '',\ None]"></index>
                <desc classes="cpp enumerator" desctype="enumerator" domain="cpp" objtype="enumerator">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a7e56035a736d269ad670f312496a0846af1ce01387d2348f8b858721a7db81670"></target><desc_sig_keyword classes="k">enumerator</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">S</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </container>
    <container classes="breathe-sectiondef" objtype="func">
        <rubric classes="breathe-sectiondef-title">Functions</rubric>
        <index entries="['single',\ 'C\ (C++\ function)',\ '_CPPv41CDa',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a4e9dca803644b229950625e5415230ac"></target><desc_sig_keyword_type classes="kt">auto</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">C</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">auto</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">x</desc_sig_name></desc_parameter></desc_parameterlist><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">-&gt;</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv41A" reftitle="A"><desc_sig_name classes="n">A</desc_sig_name></reference></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'D\ (C++\ function)',\ '_CPPv4I0E1Dvv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="index_8h_1a487bfd0fa592fa6a6541fa6563b4eed8"></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">D</desc_sig_name></desc_name><desc_parameterlist></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </container>
    <container classes="breathe-sectiondef" objtype="var">
        <rubric classes="breathe-sectiondef-title">Variables</rubric>
        <index entries="['single',\ 'A\ (C++\ member)',\ '_CPPv41A',\ '',\ None]"></index>
        <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a56a52f73797a8d06045cf5bc1ab831bf"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">A</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </container>
    <index entries="['single',\ 'E\ (C++\ struct)',\ '_CPPv41E',\ '',\ None]"></index>
    <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_e"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">E</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="public-attrib">
                <rubric classes="breathe-sectiondef-title">Public Members</rubric>
                <index entries="['single',\ 'E::F\ (C++\ member)',\ '_CPPv4N1E1FE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_e_1ad7609b176cbaad69a2437f645ffc8565"></target><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">F</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
        </desc_content>
    </desc>
    <index entries="['single',\ 'G\ (C++\ type)',\ '_CPPv41G',\ '',\ None]"></index>
    <desc classes="cpp type" desctype="type" domain="cpp" objtype="type">
        <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="namespace_g"></target><desc_sig_keyword classes="k">namespace</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">G</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
            <container classes="breathe-sectiondef" objtype="typedef">
                <rubric classes="breathe-sectiondef-title">Typedefs</rubric>
                <index entries="['single',\ 'G::O\ (C++\ type)',\ '_CPPv4N1G1OE',\ '',\ None]"></index>
                <desc classes="cpp type" desctype="type" domain="cpp" objtype="type">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a5cc6a8b3f2ac49e5ea1d796d7b8deb88"></target><desc_sig_keyword classes="k">typedef</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">(</desc_sig_punctuation><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_name classes="sig-name descname"><desc_sig_name classes="n">O</desc_sig_name></desc_name><desc_sig_punctuation classes="p">)</desc_sig_punctuation><desc_sig_punctuation classes="p">(</desc_sig_punctuation><reference internal="True" refid="_CPPv41B" reftitle="B"><desc_sig_name classes="n">B</desc_sig_name></reference><desc_sig_punctuation classes="p">)</desc_sig_punctuation></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <container classes="breathe-sectiondef" objtype="var">
                <rubric classes="breathe-sectiondef-title">Variables</rubric>
                <index entries="['single',\ 'G::H\ (C++\ member)',\ '_CPPv4N1G1HE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a63c878d1cd47bc0b8a2fd42194ca61cb"></target><desc_sig_keyword classes="k">constexpr</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">unsigned</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">H</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_literal_number classes="m">12</desc_sig_literal_number></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'G::I\ (C++\ member)',\ '_CPPv4N1G1IE',\ '',\ None]"></index>
                <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                    <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="index_8h_1a392dac17f32ad4e3afd2a98a40ad2d5e"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">I</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </container>
            <index entries="['single',\ 'G::J\ (C++\ class)',\ '_CPPv4I0EN1G1JE',\ '',\ None]"></index>
            <desc classes="cpp class" desctype="class" domain="cpp" objtype="class">
                <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="class_g_1_1_j"></target><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">J</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                <desc_content>
                    <container classes="breathe-sectiondef" objtype="public-attrib">
                        <rubric classes="breathe-sectiondef-title">Public Members</rubric>
                        <index entries="['single',\ 'G::J::K\ (C++\ member)',\ '_CPPv4N1G1J1KE',\ '',\ None]"></index>
                        <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="class_g_1_1_j_1aeadc30bb7b5e8e6def1a8f929ad65b31"></target><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J::T"><desc_sig_name classes="n">T</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">K</desc_sig_name></desc_name><desc_sig_punctuation classes="p">[</desc_sig_punctuation><reference internal="True" refid="_CPPv4N1G1HE" reftitle="G::H"><desc_sig_name classes="n">H</desc_sig_name></reference><desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_signature_line></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </container>
                    <container classes="breathe-sectiondef" objtype="friend">
                        <rubric classes="breathe-sectiondef-title">Friends</rubric>
                        <index entries="['single',\ 'G::J::operator==\ (C++\ function)',\ '_CPPv4N1G1JeqE1J1J',\ '',\ None]"></index>
                        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
                            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="class_g_1_1_j_1a8f17a23a7548fe664adb9010dcaf0f1a"></target><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">inline</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">friend</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">bool</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_keyword classes="k">operator</desc_sig_keyword><desc_sig_operator classes="o">==</desc_sig_operator></desc_name><desc_parameterlist><desc_parameter noemph="True"><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J"><desc_sig_name classes="n">J</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">ja</desc_sig_name></desc_parameter><desc_parameter noemph="True"><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J"><desc_sig_name classes="n">J</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">jb</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </container>
                </desc_content>
            </desc>
            <index entries="['single',\ 'G::L\ (C++\ struct)',\ '_CPPv4I0EN1G1LE',\ '',\ None]"></index>
            <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
                <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="struct_g_1_1_l"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">L</desc_sig_name></desc_name></desc_signature_line></desc_signature>
                <desc_content>
                    <container classes="breathe-sectiondef" objtype="public-static-attrib">
                        <rubric classes="breathe-sectiondef-title">Public Static Attributes</rubric>
                        <index entries="['single',\ 'G::L::M\ (C++\ member)',\ '_CPPv4N1G1L1ME',\ '',\ None]"></index>
                        <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_g_1_1_l_1a702e62504d94cb9b822edaf918a406d7"></target><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">constexpr</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">bool</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">M</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">false</desc_sig_keyword></desc_signature_line></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </container>
                </desc_content>
            </desc>
            <index entries="['single',\ 'G::L&lt;J&lt;T&gt;&gt;\ (C++\ struct)',\ '_CPPv4I0EN1G1LI1JI1TEEE',\ '',\ None]"></index>
            <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
                <desc_signature classes="sig sig-object cpp"><desc_signature_line><desc_sig_keyword classes="k">template</desc_sig_keyword><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><desc_sig_keyword classes="k">typename</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">T</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line><desc_signature_line><target dupnames="struct_g_1_1_l_3_01_j_3_01_t_01_4_01_4"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">L</desc_sig_name></desc_name><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><reference internal="True" refid="_CPPv4I0EN1G1JE" reftitle="G::J"><desc_sig_name classes="n">J</desc_sig_name></reference><desc_sig_punctuation classes="p">&lt;</desc_sig_punctuation><reference internal="True" refid="_CPPv4I0EN1G1LI1JI1TEEE" reftitle="G::L&lt;J&lt;T&gt;&gt;::T"><desc_sig_name classes="n">T</desc_sig_name></reference><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation><desc_sig_punctuation classes="p">&gt;</desc_sig_punctuation></desc_signature_line></desc_signature>
                <desc_content>
                    <container classes="breathe-sectiondef" objtype="public-static-attrib">
                        <rubric classes="breathe-sectiondef-title">Public Static Attributes</rubric>
                        <index entries="['single',\ 'G::L&lt;J&lt;T&gt;&gt;::M\ (C++\ member)',\ '_CPPv4N1G1LI1JI1TEE1ME',\ '',\ None]"></index>
                        <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
                            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target dupnames="struct_g_1_1_l_3_01_j_3_01_t_01_4_01_4_1a5bf108c1850d859adfd1131295d80cd9"></target><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">constexpr</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">bool</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">M</desc_sig_name></desc_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword classes="k">true</desc_sig_keyword></desc_signature_line></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </container>
                </desc_content>
            </desc>
        </desc_content>
    </desc>
</document>
