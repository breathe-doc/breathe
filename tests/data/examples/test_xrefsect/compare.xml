<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../../docutils.css"?>
<document>
    <paragraph>A few examples of xrefsect items support. </paragraph>
    <container classes="breathe-sectiondef" objtype="func">
        <rubric classes="breathe-sectiondef-title">Functions</rubric>
        <index entries="['single',\ 'unimplemented\ (C++\ function)',\ '_CPPv413unimplementedv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">unimplemented</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of using Doxygen’s todo command. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><reference internal="True" refid="todo_1_todo000001"><inline classes="std std-ref">Todo:</inline></reference></desc_signature><desc_content><paragraph>Implement this function. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'buggy_function\ (C++\ function)',\ '_CPPv414buggy_functioni',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">buggy_function</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">param</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of using Doxygen’s bug and test commands. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><reference internal="True" refid="bug_1_bug000001"><inline classes="std std-ref">Bug:</inline></reference></desc_signature><desc_content><paragraph>Does not work yet.</paragraph></desc_content></desc></paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><reference internal="True" refid="test_1_test000001"><inline classes="std std-ref">Test:</inline></reference></desc_signature><desc_content><paragraph>Add proper unit testing first. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'old_function\ (C++\ function)',\ '_CPPv412old_functionv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">old_function</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of using Doxygen’s deprecated command. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><reference internal="True" refid="deprecated_1_deprecated000001"><inline classes="std std-ref">Deprecated:</inline></reference></desc_signature><desc_content><paragraph>Should not be used on new code. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'sample_xrefitem_function\ (C++\ function)',\ '_CPPv424sample_xrefitem_functionv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">sample_xrefitem_function</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of a custom Doxygen xrefitem declared as an ALIAS. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><reference internal="True" refid="xrefsample_1_xrefsample000001"><inline classes="std std-ref">xref Sample:</inline></reference></desc_signature><desc_content><paragraph>This text shows up in the xref output. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
    </container>
    <desc domain="cpp" objtype="page">
        <desc_signature classes="sig sig-object cpp"><target></target><emphasis>page</emphasis> <desc_name classes="sig-name descname">todo</desc_name></desc_signature>
        <desc_content>
            <paragraph><desc domain="cpp" objtype="varentry"><desc_signature classes="sig sig-object cpp">Member <reference internal="True" refid="xrefsect_8h_1aaabc1fc395849c996ef721dee24a4d15"><inline classes="std std-ref">unimplemented</inline></reference>  (void)</desc_signature><desc_content><paragraph><target></target>Implement this function. </paragraph></desc_content></desc></paragraph>
        </desc_content>
    </desc>
    <desc domain="cpp" objtype="page">
        <desc_signature classes="sig sig-object cpp"><target></target><emphasis>page</emphasis> <desc_name classes="sig-name descname">bug</desc_name></desc_signature>
        <desc_content>
            <paragraph><desc domain="cpp" objtype="varentry"><desc_signature classes="sig sig-object cpp">Member <reference internal="True" refid="xrefsect_8h_1a4af8f2780237883e0fd8ce8c7cda364a"><inline classes="std std-ref">buggy_function</inline></reference>  (int param)</desc_signature><desc_content><paragraph><target></target>Does not work yet.</paragraph></desc_content></desc></paragraph>
        </desc_content>
    </desc>
    <desc domain="cpp" objtype="page">
        <desc_signature classes="sig sig-object cpp"><target></target><emphasis>page</emphasis> <desc_name classes="sig-name descname">test</desc_name></desc_signature>
        <desc_content>
            <paragraph><desc domain="cpp" objtype="varentry"><desc_signature classes="sig sig-object cpp">Member <reference internal="True" refid="xrefsect_8h_1a4af8f2780237883e0fd8ce8c7cda364a"><inline classes="std std-ref">buggy_function</inline></reference>  (int param)</desc_signature><desc_content><paragraph><target></target>Add proper unit testing first. </paragraph></desc_content></desc></paragraph>
        </desc_content>
    </desc>
    <desc domain="cpp" objtype="page">
        <desc_signature classes="sig sig-object cpp"><target></target><emphasis>page</emphasis> <desc_name classes="sig-name descname">deprecated</desc_name></desc_signature>
        <desc_content>
            <paragraph><desc domain="cpp" objtype="varentry"><desc_signature classes="sig sig-object cpp">Member <reference internal="True" refid="xrefsect_8h_1a726ec28ea097364e46ca633d7f33596c"><inline classes="std std-ref">old_function</inline></reference>  (void)</desc_signature><desc_content><paragraph><target></target>Should not be used on new code. </paragraph></desc_content></desc></paragraph>
        </desc_content>
    </desc>
    <desc domain="cpp" objtype="page">
        <desc_signature classes="sig sig-object cpp"><target></target><emphasis>page</emphasis> <desc_name classes="sig-name descname">xrefsample</desc_name></desc_signature>
        <desc_content>
            <paragraph><desc domain="cpp" objtype="varentry"><desc_signature classes="sig sig-object cpp">Member <reference internal="True" refid="xrefsect_8h_1a1d47f2d2bb9f6df76e98126ba67d012d"><inline classes="std std-ref">sample_xrefitem_function</inline></reference>  (void)</desc_signature><desc_content><paragraph><target></target> This text shows up in the xref output. </paragraph></desc_content></desc></paragraph>
        </desc_content>
    </desc>
</document>
